service: serverless-flask
plugins:
  - serverless-python-requirements
  - serverless-wsgi
custom:
  wsgi:
    app: app.app
    packRequirements: false
  pythonRequirements:
    dockerizePip: non-linux
provider:
  name: aws
  runtime: python3.6
  stage: dev
  region: us-east-1
  iamRoleStatements:
    - Effect: Allow
      Action:
        - 's3:ListBucket'
        - 's3:GetBucketLocation'
        - 's3:GetObject'
        - dynamodb:Query
        - 'sqs:ReceiveMessage'
        - 'sqs:SendMessage'
        - 'sqs:DeleteMessage'
      Resource:
        - 'arn:aws:s3:::demo-s3-bucket-cs493-2'
        - 'arn:aws:s3:::demo-s3-bucket-cs493-2/*'
        - 'arn:aws:dynamodb:us-west-2:513502687153:table/music'
        - 'arn:aws:sqs:us-east-1:513502687153:music'
functions:
  auth:
    handler: auth.handler
  app:
    handler: wsgi.handler
    events:
        - http:
            method: ANY
            path: /{proxy+}
            cors: true
            authorizer:
              name: auth
              type: request
              identitySourcee: method.request.header.authorization
  sqs:
    handler: handler.logger
    events:
      - sqs: arn:aws:sqs:us-east-1:513502687153:music

resources:
  Resources:
    GatewayResponse:
      Type: 'AWS::ApiGateway::GatewayResponse'
      Properties:
        ResponseParameters:
          gatewayresponse.header.Access-Control-Allow-Origin: "'*'"
          gatewayresponse.header.Access-Control-Allow-Headers: "'*'"
        ResponseType: EXPIRED_TOKEN
        RestApiId:
          Ref: 'ApiGatewayRestApi'
        StatusCode: '401'
    AuthFailureGatewayResponse:
      Type: 'AWS::ApiGateway::GatewayResponse'
      Properties:
        ResponseParameters:
          gatewayresponse.header.Access-Control-Allow-Origin: "'*'"
          gatewayresponse.header.Access-Control-Allow-Headers: "'*'"
        ResponseType: UNAUTHORIZED
        RestApiId:
          Ref: 'ApiGatewayRestApi'
        StatusCode: '401'